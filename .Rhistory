## 2. Total points scored against different opponents
total_points_by_opponent <- aggregate(PTS ~ Opponent, data=data, sum)
library(readxl)
library(tidyverse)
library(ggplot2)
library(dplyr)
## 2. Total points scored against different opponents
total_points_by_opponent <- aggregate(PTS ~ Opponent, data=data, sum)
## 5. Boxplot for points scored in regular season vs. playoffs
ggplot(data, aes(x=Type, y=PTS, fill=Type)) +
geom_boxplot() +
scale_fill_manual(values=c("REGULAR SEASON STATS"="lightblue", "PLAYOFFS STATS"="lightcoral")) +
labs(title="Points Scored in Regular Season vs. Playoffs", x="Game Type", y="Points Scored") +
theme_minimal()
library(readxl)
library(tidyverse)
library(ggplot2)
library(dplyr)
# Load the dataset
file_path <- "C:\\Users\\sathv\\Desktop\\R project\\Stephen Curry Stats dataset.xlsx"
nba_data <- read_excel(file_path)
str(nba_data)
dim(nba_data)
## 5. Boxplot for points scored in regular season vs. playoffs
ggplot(data, aes(x=Type, y=PTS, fill=Type)) +
geom_boxplot() +
scale_fill_manual(values=c("REGULAR SEASON STATS"="lightblue", "PLAYOFFS STATS"="lightcoral")) +
labs(title="Points Scored in Regular Season vs. Playoffs", x="Game Type", y="Points Scored") +
theme_minimal()
library(readxl)
library(tidyverse)
library(ggplot2)
library(dplyr)
# Load the dataset
file_path <- "C:\\Users\\sathv\\Desktop\\R project\\Stephen Curry Stats dataset.xlsx"
nba_data <- read_excel(file_path)
str(nba_data)
dim(nba_data)
## 2. Total points scored against different opponents
total_points_by_opponent <- aggregate(PTS ~ Opponent, data=data, sum)
# Load the dataset
file_path <- "C:\\Users\\sathv\\Desktop\\R project\\Stephen Curry Stats dataset.xlsx"
nba_data <- read_excel(file_path)
str(nba_data)
dim(nba_data)
## 2. Total points scored against different opponents
total_points_by_opponent <- aggregate(PTS ~ Opponent, data=data, sum)
# Install and load necessary packages
install.packages(c("readxl", "tidyverse", "ggplot2", "dplyr"))
library(readxl)
library(tidyverse)
library(ggplot2)
library(dplyr)
# Load the dataset
file_path <- "C:\\Users\\sathv\\Desktop\\R project\\Stephen Curry Stats dataset.xlsx"
nba_data <- read_excel(file_path)
str(nba_data)
dim(nba_data)
## 2. Total points scored against different opponents
total_points_by_opponent <- aggregate(PTS ~ Opponent, data=data, sum)
file_path <- "C:\\Users\\sathv\\Desktop\\R project\\Stephen Curry Stats dataset.xlsx"
nba_data <- read_excel(file_path)
library(readxl)
library(tidyverse)
library(ggplot2)
library(dplyr)
# Load the dataset
file_path <- "C:\\Users\\sathv\\Desktop\\R project\\Stephen Curry Stats dataset.xlsx"
nba_data <- read_excel(file_path)
str(nba_data)
dim(nba_data)
## 2. Total points scored against different opponents
total_points_by_opponent <- aggregate(PTS ~ Opponent, data=data, sum)
ggplot(total_points_by_opponent, aes(x=reorder(Opponent, -PTS), y=PTS)) +
geom_bar(stat="identity", fill="darkgreen") +
labs(title="Total Points Scored Against Different Opponents", x="Opponent", y="Total Points") +
theme(axis.text.x = element_text(angle=90, hjust=1))
##2.Total points scored against different opponents
# Aggregate the total points scored against different opponents
total_points_by_opponent <- aggregate(PTS ~ Opponent, data=nba_data, sum)
# Plot the data using ggplot2
ggplot(total_points_by_opponent, aes(x=reorder(Opponent, -PTS), y=PTS)) +
geom_bar(stat="identity", fill="darkgreen") +
labs(title="Total Points Scored Against Different Opponents", x="Opponent", y="Total Points") +
theme(axis.text.x = element_text(angle=90, hjust=1))
## 3. Relationship between minutes played and points scored
ggplot(data, aes(x=Minutes, y=PTS)) +
geom_point(color="red") +
labs(title="Minutes Played vs. Points Scored", x="Minutes Played", y="Points Scored") +
theme_minimal()
## 3. Relationship between minutes played and points scored
ggplot(data, aes(x=Minutes, y=PTS)) +
geom_point(color="red") +
labs(title="Minutes Played vs. Points Scored", x="Minutes Played", y="Points Scored") +
theme_minimal()
## 3. Relationship between minutes played and points scored
ggplot(data, aes(x=Minutes, y=PTS)) +
geom_point(color="red") +
labs(title="Minutes Played vs. Points Scored", x="Minutes Played", y="Points Scored") +
theme_minimal()
ggplot(nba_data, aes(x=Minutes, y=PTS)) +
geom_point(color="red") +
labs(title="Minutes Played vs. Points Scored", x="Minutes Played", y="Points Scored") +
theme_minimal()
file_path <- "C:\\Users\\sathv\\Desktop\PES\\R programing\\unit 3\\pupae.csv"
file_path <- "C:\\Users\\sathv\\Desktop\\PES\\R programing\\unit 3\\pupae.csv"
pupae <- read.csv(file_path)
str(pupae)
dim(pupae)
plot(Frass ~ PupalWeight, col = CO2treatment, data = subset(pupae, CO2_treatment == "280"), pch = 19)
plot(Frass ~ PupalWeight, col = CO2_treatment, data = subset(pupae, CO2_treatment == "280"), pch = 19)
plot(Frass ~ PupalWeight, col = CO2_treatment, data = subset(pupae, CO2_treatment == "400"), pch = 19)
#scatter plot
plot(Frass ~ PupalWeight, col = CO2_treatment, data = subset(pupae, CO2_treatment == "280"), pch = 19)
plot(Frass ~ PupalWeight, col = CO2_treatment, data = subset(pupae, CO2_treatment == "400"), pch = 19)
plot(Frass ~ PupalWeight, col = CO2_treatment, data = subset(pupae, T_treatment == "ambient"), pch = 19)
plot(Frass ~ PupalWeight, col = CO2_treatment, data = subset(pupae, T_treatment == "elevated"), pch = 19)
plot(Frass ~ PupalWeight, col = CO2_treatment, data = subset(pupae, T_treatment == "ambient"), pch = 19)
plot(Frass ~ PupalWeight, col = CO2_treatment, data = subset(pupae, T_treatment == "elevated"), pch = 19)
str(pupae)
plot(Frass ~ PupalWeight,
col = CO2_treatment,
data = subset(pupae, T_treatment == "elevated"),
pch = 19)
plot(Frass ~ PupalWeight,
col = CO2_treatment,
data = subset(pupae, T_treatment == "elevated"),
pch = 20)
plot(Frass ~ PupalWeight,
col = CO2_treatment,
data = subset(pupae, T_treatment == "elevated"),
pch = 19)
legend("topleft", levels(pupae$CO2_treatment), pch=3, title = "CO2_treatment", col = palette())
par(mfrow = c(1,1))
palette(c("red","blue"))
plot(Frass ~ PupalWeight,
col = CO2_treatment,
pch = c(1,16)[T_treatment],
data = pupae,
xlim = c(0, 0.5),
ylim = c(0, 3.5))
legend("topleft", levels(pupae$CO2_treatment), pch=3, title = "CO2_treatment", col = palette())
legend("botttomleft", levels(pupae$T_treatment), pch=c(1,16), title = "T_treatment", col = black)
legend("topleft", legend = levels(pupae$CO2_treatment), pch=3, title = "CO2_treatment", col = palette())
legend("botttomleft", legend = levels(pupae$T_treatment), pch=c(1,16), title = "T_treatment", col = black)
legend("topleft", legend = levels(pupae$CO2_treatment), pch=3, col = palette(), title = "CO2_treatment")
legend("topleft", legend = levels(pupae$CO2_treatment), pch = 1, col = palette(), title = "CO2_treatment")
legend("bottomleft", legend = levels(pupae$T_treatment), pch = c(1,16), col = "black", title = "T_treatment")
# Plot the data
plot(Frass ~ PupalWeight,
col = pupae$CO2_treatment,
pch = c(1,16)[as.numeric(pupae$T_treatment)],
data = pupae,
xlim = c(0, 0.5),
ylim = c(0, 3.5))
# Add legend for CO2_treatment
legend("topleft", legend = levels(pupae$CO2_treatment), pch = 1, col = palette(), title = "CO2_treatment")
# Add legend for T_treatment
legend("bottomleft", legend = levels(pupae$T_treatment), pch = c(1,16), col = "black", title = "T_treatment")
legend("botttomleft", levels(pupae$T_treatment), pch=c(1,16), title = "T_treatment", col = "black")
legend("topleft", levels(pupae$CO2_treatment), pch=3, title = "CO2_treatment", col = palette())
legend("botttomleft", levels(pupae$T_treatment), pch=c(1,16), title = "T_treatment", col = "black")
pupae$T_treatmnt <- as.factor(puape$T_treatment)
legend("topleft",
levels(pupae$CO2_treatment),
pch=3, title = "CO2_treatment",
col = palette())
legend("botttomleft",
levels(pupae$T_treatment),
pch=c(1,16),
title = "T_treatment",
col = "black")
